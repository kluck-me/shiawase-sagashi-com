{"version":3,"sources":["js/photoshuffler.js"],"names":["gblStartImg","gblPhotoShufflerDivId","gblPhotoShufflerImgId","gblImg","Array","gblPauseSeconds","gblFadeSeconds","gblRotations","gblDeckSize","length","gblOpacity","gblOnDeck","gblImageRotations","photoShufflerLaunch","theimg","document","getElementById","src","style","backgroundImage","setTimeout","photoShufflerFade","fadeDelta","photoShufflerShuffle","setOpacity","thediv","obj","opacity","filter","KHTMLOpacity","MozOpacity","window","onload"],"mappings":";AAwBE,IAsBIA,EAtBAC,EAAwB,YACxBC,EAAwB,WACxBC,EAAS,IAAIC,MACf,kDACA,kDACH,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,mDAEKC,EAAkB,KAClBC,EAAiB,IACjBC,EAAe,IAIfC,EAAcL,EAAOM,OACrBC,EAAa,IACbC,EAAY,EAEZC,EAAoBJ,GAAeD,EAAa,GAIpD,SAASM,IAEJC,IAAAA,EAASC,SAASC,eAAed,GAChCF,EAAcc,EAAOG,IAE5BF,SAASC,eAAef,GAAuBiB,MAAMC,gBAAgB,OAAShB,EAAOQ,GAAa,IAClGS,WAAW,sBAAsC,IAAhBf,GAGhC,SAASgB,IAEJP,IAAAA,EAASC,SAASC,eAAed,GAI5BoB,EAAY,KAAO,GAAKhB,GAG/BI,GAAAA,EAAa,EAAEY,EACnB,CAGMV,GAFJF,EAAa,IAETE,EAAoB,EAAG,OAC3BW,IAEOH,WAAW,sBAAsC,IAAhBf,QAKxCmB,EAAWV,EADXJ,GAAcY,GAEdF,WAAW,sBAAsB,IAIlC,SAASG,IAENE,IAAAA,EAASV,SAASC,eAAef,GACjCa,EAASC,SAASC,eAAed,GAGrCY,EAAOG,IAAMd,EAAOQ,GAEpBa,EAAWV,EAAO,KAGlBH,IAAcA,EAAYH,IAEpBI,EAAoB,IAGxBT,EAAOQ,GAAaX,GAItByB,EAAOP,MAAMC,gBAAgB,OAAShB,EAAOQ,GAAa,IAGzD,SAASa,EAAWE,EAAKC,GACvBA,EAAsB,KAAXA,EAAgB,OAAOA,EAGlCD,EAAIR,MAAMU,OAAS,iBAAiBD,EAAQ,IAG5CD,EAAIR,MAAMW,aAAeF,EAAQ,IAGjCD,EAAIR,MAAMY,WAAaH,EAAQ,IAG/BD,EAAIR,MAAMS,QAAUA,EAAQ,IAzE9BI,OAAOC,OAASnB","file":"photoshuffler.623861b5.js","sourceRoot":"../src","sourcesContent":["  //\n  // CSS Photo Shuffler v1.0 by\n  //   Carl Camera\n  //   http://iamacamera.org \n  //\n  // SetOpacity Function and inpiration from Photo Fade by\n  //   Richard Rutter\n  //   http://clagnut.com\n  //\n  // License: Creative Commons Attribution 2.5  License\n  //   http://creativecommons.org/licenses/by/2.5/\n  //\n\n  // Customize your photo shuffle settings\n  // \n  // * Surround the target <img /> with a <div>. specify id= in both\n  // * set background-repeat:no-repeat in CSS for the div\n  // * The first and final photo displayed is in the html <img> tag\n  // * The array contains paths to photos you want in the rotation. \n  //   If you want the first photo in the rotation, then it's best to\n  //   put it as the final array image.  All photos must be same dimension\n  // * The rotations variable specifies how many times to repeat array.\n  //   images. zero is a valid rotation value.\n\n  var gblPhotoShufflerDivId = \"mainimage\";\n  var gblPhotoShufflerImgId = \"photoimg\"; \n  var gblImg = new Array(   \n    \"https://shiawase-sagashi.com/top/mainimage2.jpg\",\n    \"https://shiawase-sagashi.com/top/mainimage3.jpg\",\n\t\"https://shiawase-sagashi.com/top/mainimage4.jpg\",\n\t\"https://shiawase-sagashi.com/top/mainimage5.jpg\",\n\t\"https://shiawase-sagashi.com/top/mainimage6.jpg\",\n\t\"https://shiawase-sagashi.com/top/mainimage7.jpg\",\n\t\"https://shiawase-sagashi.com/top/mainimage8.jpg\",\n\t\"https://shiawase-sagashi.com/top/mainimage9.jpg\",\n\t\"https://shiawase-sagashi.com/top/mainimage1.jpg\"\n    );\n  var gblPauseSeconds = 3.25;\n  var gblFadeSeconds = .85;\n  var gblRotations = 100;\n\n  // End Customization section\n  \n  var gblDeckSize = gblImg.length;\n  var gblOpacity = 100;\n  var gblOnDeck = 0;\n  var gblStartImg;\n  var gblImageRotations = gblDeckSize * (gblRotations+1);\n\n  window.onload = photoShufflerLaunch;\n  \n  function photoShufflerLaunch()\n  {\n  \tvar theimg = document.getElementById(gblPhotoShufflerImgId);\n        gblStartImg = theimg.src; // save away to show as final image\n\n\tdocument.getElementById(gblPhotoShufflerDivId).style.backgroundImage='url(' + gblImg[gblOnDeck] + ')';\n\tsetTimeout(\"photoShufflerFade()\",gblPauseSeconds*1000);\n  }\n\n  function photoShufflerFade()\n  {\n  \tvar theimg = document.getElementById(gblPhotoShufflerImgId);\n\t\n  \t// determine delta based on number of fade seconds\n\t// the slower the fade the more increments needed\n        var fadeDelta = 100 / (30 * gblFadeSeconds);\n\n\t// fade top out to reveal bottom image\n\tif (gblOpacity < 2*fadeDelta ) \n\t{\n\t  gblOpacity = 100;\n\t  // stop the rotation if we're done\n\t  if (gblImageRotations < 1) return;\n\t  photoShufflerShuffle();\n\t  // pause before next fade\n          setTimeout(\"photoShufflerFade()\",gblPauseSeconds*1000);\n\t}\n\telse\n\t{\n\t  gblOpacity -= fadeDelta;\n\t  setOpacity(theimg,gblOpacity);\n\t  setTimeout(\"photoShufflerFade()\",30);  // 1/30th of a second\n\t}\n  }\n\n  function photoShufflerShuffle()\n  {\n\tvar thediv = document.getElementById(gblPhotoShufflerDivId);\n\tvar theimg = document.getElementById(gblPhotoShufflerImgId);\n\t\n\t// copy div background-image to img.src\n\ttheimg.src = gblImg[gblOnDeck];\n\t// set img opacity to 100\n\tsetOpacity(theimg,100);\n\n        // shuffle the deck\n\tgblOnDeck = ++gblOnDeck % gblDeckSize;\n\t// decrement rotation counter\n\tif (--gblImageRotations < 1)\n\t{\n\t  // insert start/final image if we're done\n\t  gblImg[gblOnDeck] = gblStartImg;\n\t}\n\n\t// slide next image underneath\n\tthediv.style.backgroundImage='url(' + gblImg[gblOnDeck] + ')';\n  }\n\n  function setOpacity(obj, opacity) {\n    opacity = (opacity == 100)?99.999:opacity;\n    \n    // IE/Win\n    obj.style.filter = \"alpha(opacity:\"+opacity+\")\";\n    \n    // Safari<1.2, Konqueror\n    obj.style.KHTMLOpacity = opacity/100;\n\n    // Older Mozilla and Firefox\n    obj.style.MozOpacity = opacity/100;\n\n    // Safari 1.2, newer Firefox and Mozilla, CSS3\n    obj.style.opacity = opacity/100;\n  }\n\n\n"]}